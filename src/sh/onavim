#! /usr/bin/env bash

rund="$HOME/.onavim.run"
mkdir -p "$rund"
. $(dirname $0)/logging.sh "$rund"

sessionLocation="$1"
[[ -z "$sessionLocation" && -e "$rund/sessions" ]] && sessionLocation=$(tail -n 1 "$rund/sessions")
[[ -z "$sessionLocation" ]] && sessionLocation=$(pwd)

read version <$(dirname $0)/../version

function launch {
    kind="${1%@*}"
    if [[ "$kind" == "$1" ]]; then
        sesl="$(realpath $1)"
        $(dirname $0)/WriteLeastRecentlyUsed "$rund/sessions" "$sesl"
        $(dirname $0)/CodeMain "$sesl" "$rund/sessions"
    elif [[ "$kind" == "ssh" ]]; then
        location="${1#*@}"
        remote="${location%:*}"
        folder=$(ssh "$remote" "realpath '${location#*:}'")
        sesl="ssh@$remote:$folder"
        $(dirname $0)/WriteLeastRecentlyUsed "$rund/sessions" "$sesl"
        rdir="\$HOME/.onavim/sessions-from/$(hostname -f)"
        rdir=$(ssh "$remote" "mkdir -p $rdir && realpath $rdir")
        sess="$rdir/sessions"
        scp "$rund/sessions" "$remote:$sess"
        ssh -t "$remote" "/opt/onavim/$version/sh/CodeMain '$folder' '$sess'"
        scp "$remote:$sess" "$rund/sessions"
    elif [[ "$kind" == "podman" ]]; then
        location="${1#*@}"
        container="${location%:*}"
        folder=$(podman exec -i "$container" bash -c "realpath ${location#*:}")
        sesl="podman@$container:$folder"
        $(dirname $0)/WriteLeastRecentlyUsed "$rund/sessions" "$sesl"
        rdir="\$HOME/.onavim/sessions-from/$(hostname -f)"
        rdir=$(podman exec -i "$container" bash -c "mkdir -p $rdir && realpath $rdir")
        sess="$rdir/sessions"
        podman cp "$rund/sessions" "$container:$sess"
        podman exec -it "$container" /opt/onavim/$version/sh/CodeMain "$folder" "$sess"
        podman cp "$container:$sess" "$rund/sessions"
    fi
    next=$(tail -n 1 "$rund/sessions")
    [[ "$next" == "$sesl" ]] && return
    launch "$next"
}

launch "$sessionLocation"
